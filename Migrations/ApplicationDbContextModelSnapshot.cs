// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SysIntegradorApp.data;

#nullable disable

namespace SysIntegradorApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SysIntegradorApp.ClassesAuxiliares.ApoioOnPedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Action")
                        .HasColumnType("text")
                        .HasColumnName("action");

                    b.Property<int>("Id_Pedido")
                        .HasColumnType("integer")
                        .HasColumnName("id_pedido");

                    b.HasKey("Id");

                    b.ToTable("apoioonpedido");
                });

            modelBuilder.Entity("SysIntegradorApp.ClassesAuxiliares.ClassesAiqfome.ClsEmpresasAiqFome", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClientId")
                        .HasColumnType("text")
                        .HasColumnName("client_id");

                    b.Property<string>("CodeUri")
                        .HasColumnType("text")
                        .HasColumnName("code_uri");

                    b.Property<bool>("IntegraEmpresa")
                        .HasColumnType("boolean")
                        .HasColumnName("integra_empresa");

                    b.Property<string>("NomeIdentificador")
                        .HasColumnType("text")
                        .HasColumnName("nome_identificador");

                    b.Property<bool>("Online")
                        .HasColumnType("boolean")
                        .HasColumnName("online");

                    b.Property<string>("RedirectUri")
                        .HasColumnType("text")
                        .HasColumnName("redirect_uri");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("text")
                        .HasColumnName("refresh_token");

                    b.Property<string>("TokenExpiracao")
                        .HasColumnType("text")
                        .HasColumnName("token_expiracao");

                    b.Property<string>("TokenReq")
                        .HasColumnType("text")
                        .HasColumnName("token_req");

                    b.HasKey("Id");

                    b.ToTable("empresasaiqfome");
                });

            modelBuilder.Entity("SysIntegradorApp.ClassesAuxiliares.ClassesGarcomSysMenu.ApoioAppGarcom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("criadoem");

                    b.Property<string>("Obs")
                        .HasColumnType("text")
                        .HasColumnName("obs");

                    b.Property<string>("PedidoJson")
                        .HasColumnType("text")
                        .HasColumnName("pedidojson");

                    b.Property<bool>("Processado")
                        .HasColumnType("boolean")
                        .HasColumnName("processado");

                    b.Property<string>("Tipo")
                        .HasColumnType("text")
                        .HasColumnName("tipo");

                    b.HasKey("Id");

                    b.ToTable("apoioappgarcom");
                });

            modelBuilder.Entity("SysIntegradorApp.ClassesAuxiliares.ClassesGarcomSysMenu.ClsDeAcesso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Senha")
                        .HasColumnType("text")
                        .HasColumnName("senha");

                    b.Property<string>("Usuario")
                        .HasColumnType("text")
                        .HasColumnName("usuario");

                    b.HasKey("Id");

                    b.ToTable("acesso");
                });

            modelBuilder.Entity("SysIntegradorApp.ClassesAuxiliares.ClassesGarcomSysMenu.ConfigAppGarcom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("BuscaDeItens")
                        .HasColumnType("boolean")
                        .HasColumnName("buscadeitens");

                    b.Property<bool>("Comanda")
                        .HasColumnType("boolean")
                        .HasColumnName("comanda");

                    b.Property<bool>("ListaDeItens")
                        .HasColumnType("boolean")
                        .HasColumnName("listadeitens");

                    b.Property<bool>("ListaPorGrupo")
                        .HasColumnType("boolean")
                        .HasColumnName("listaporgrupo");

                    b.Property<bool>("Mesa")
                        .HasColumnType("boolean")
                        .HasColumnName("mesa");

                    b.Property<bool>("RequisicaoAlfaNumerica")
                        .HasColumnType("boolean")
                        .HasColumnName("requisicaoalfanumerica");

                    b.Property<bool>("RequisicaoNumerica")
                        .HasColumnType("boolean")
                        .HasColumnName("requisicaonumerica");

                    b.Property<bool>("SemRequisicao")
                        .HasColumnType("boolean")
                        .HasColumnName("semrequisicao");

                    b.Property<int>("TempoEnvioPedido")
                        .HasColumnType("integer")
                        .HasColumnName("tempoenviopedido");

                    b.Property<bool>("UsaBalcao")
                        .HasColumnType("boolean")
                        .HasColumnName("usabalcao");

                    b.HasKey("Id");

                    b.ToTable("configappgarcom");
                });

            modelBuilder.Entity("SysIntegradorApp.ClassesAuxiliares.ClassesGarcomSysMenu.Contas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Cliente")
                        .HasColumnType("text")
                        .HasColumnName("cliente");

                    b.Property<string>("CodCarda1")
                        .HasColumnType("text")
                        .HasColumnName("codcarda1");

                    b.Property<string>("CodCarda2")
                        .HasColumnType("text")
                        .HasColumnName("codcarda2");

                    b.Property<string>("CodCarda3")
                        .HasColumnType("text")
                        .HasColumnName("codcarda3");

                    b.Property<string>("Conta")
                        .HasColumnType("text")
                        .HasColumnName("conta");

                    b.Property<string>("DataInicio")
                        .HasColumnType("text")
                        .HasColumnName("datainicio");

                    b.Property<string>("Descarda")
                        .HasColumnType("text")
                        .HasColumnName("descarda");

                    b.Property<string>("HoraInicio")
                        .HasColumnType("text")
                        .HasColumnName("horainicio");

                    b.Property<string>("ImpComanda")
                        .HasColumnType("text")
                        .HasColumnName("impcomanda");

                    b.Property<string>("ImpComanda2")
                        .HasColumnType("text")
                        .HasColumnName("impcomanda2");

                    b.Property<string>("Mesa")
                        .HasColumnType("text")
                        .HasColumnName("mesa");

                    b.Property<string>("Obs1")
                        .HasColumnType("text")
                        .HasColumnName("obs1");

                    b.Property<string>("Obs10")
                        .HasColumnType("text")
                        .HasColumnName("obs10");

                    b.Property<string>("Obs11")
                        .HasColumnType("text")
                        .HasColumnName("obs11");

                    b.Property<string>("Obs12")
                        .HasColumnType("text")
                        .HasColumnName("obs12");

                    b.Property<string>("Obs13")
                        .HasColumnType("text")
                        .HasColumnName("obs13");

                    b.Property<string>("Obs14")
                        .HasColumnType("text")
                        .HasColumnName("obs14");

                    b.Property<string>("Obs15")
                        .HasColumnType("text")
                        .HasColumnName("obs15");

                    b.Property<string>("Obs2")
                        .HasColumnType("text")
                        .HasColumnName("obs2");

                    b.Property<string>("Obs3")
                        .HasColumnType("text")
                        .HasColumnName("obs3");

                    b.Property<string>("Obs4")
                        .HasColumnType("text")
                        .HasColumnName("obs4");

                    b.Property<string>("Obs5")
                        .HasColumnType("text")
                        .HasColumnName("obs5");

                    b.Property<string>("Obs6")
                        .HasColumnType("text")
                        .HasColumnName("obs6");

                    b.Property<string>("Obs7")
                        .HasColumnType("text")
                        .HasColumnName("obs7");

                    b.Property<string>("Obs8")
                        .HasColumnType("text")
                        .HasColumnName("obs8");

                    b.Property<string>("Obs9")
                        .HasColumnType("text")
                        .HasColumnName("obs9");

                    b.Property<float>("QtdComanda")
                        .HasColumnType("real")
                        .HasColumnName("qtdcomanda");

                    b.Property<float>("Qtdade")
                        .HasColumnType("real")
                        .HasColumnName("qtdade");

                    b.Property<string>("Requisicao")
                        .HasColumnType("text")
                        .HasColumnName("requisicao");

                    b.Property<string>("Status")
                        .HasColumnType("text")
                        .HasColumnName("status");

                    b.Property<string>("Tamanho")
                        .HasColumnType("text")
                        .HasColumnName("tamanho");

                    b.Property<string>("Telefone")
                        .HasColumnType("text")
                        .HasColumnName("telefone");

                    b.Property<string>("Usuario")
                        .HasColumnType("text")
                        .HasColumnName("usuario");

                    b.Property<string>("ValorTotal")
                        .HasColumnType("text")
                        .HasColumnName("valortotal");

                    b.Property<string>("ValorUnit")
                        .HasColumnType("text")
                        .HasColumnName("valorunit");

                    b.HasKey("Id");

                    b.ToTable("contas");
                });

            modelBuilder.Entity("SysIntegradorApp.ClassesAuxiliares.ClassesGarcomSysMenu.Garcom", b =>
                {
                    b.Property<string>("Codigo")
                        .HasColumnType("text")
                        .HasColumnName("codigo");

                    b.Property<string>("Nome")
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.Property<string>("Senha")
                        .HasColumnType("text")
                        .HasColumnName("senha");

                    b.Property<double>("Valor")
                        .HasColumnType("double precision")
                        .HasColumnName("valor");

                    b.HasKey("Codigo");

                    b.ToTable("garcons");
                });

            modelBuilder.Entity("SysIntegradorApp.ClassesAuxiliares.ClassesGarcomSysMenu.Grupo", b =>
                {
                    b.Property<string>("Codigo")
                        .HasColumnType("text")
                        .HasColumnName("codigo");

                    b.Property<string>("Descricao")
                        .HasColumnType("text")
                        .HasColumnName("descricao");

                    b.Property<string>("Familia")
                        .HasColumnType("text")
                        .HasColumnName("familia");

                    b.Property<bool>("Oculta")
                        .HasColumnType("boolean")
                        .HasColumnName("ocultatablet");

                    b.Property<double>("TOTGRUPO")
                        .HasColumnType("double precision")
                        .HasColumnName("totgrupo");

                    b.HasKey("Codigo");

                    b.ToTable("grupos");
                });

            modelBuilder.Entity("SysIntegradorApp.ClassesAuxiliares.ClassesGarcomSysMenu.Incremento", b =>
                {
                    b.Property<string>("Codigo")
                        .HasColumnType("text")
                        .HasColumnName("codigo");

                    b.Property<string>("Descricao")
                        .HasColumnType("text")
                        .HasColumnName("descricao");

                    b.Property<string>("Tipo")
                        .HasColumnType("text")
                        .HasColumnName("tipo");

                    b.Property<double>("Valor")
                        .HasColumnType("double precision")
                        .HasColumnName("valor");

                    b.Property<bool>("VendaInternet")
                        .HasColumnType("boolean")
                        .HasColumnName("vendainternet");

                    b.HasKey("Codigo");

                    b.ToTable("incrementos");
                });

            modelBuilder.Entity("SysIntegradorApp.ClassesAuxiliares.ClassesGarcomSysMenu.IncrementoCardapio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CodCardapio")
                        .HasColumnType("text")
                        .HasColumnName("codcarda");

                    b.Property<string>("Incremento")
                        .HasColumnType("text")
                        .HasColumnName("incremento");

                    b.HasKey("Id");

                    b.ToTable("incrementocardapio");
                });

            modelBuilder.Entity("SysIntegradorApp.ClassesAuxiliares.ClassesGarcomSysMenu.Mesa", b =>
                {
                    b.Property<string>("Codigo")
                        .HasColumnType("text")
                        .HasColumnName("codigo");

                    b.Property<bool>("Bloqueado")
                        .HasColumnType("boolean")
                        .HasColumnName("bloqueado");

                    b.Property<string>("Cartao")
                        .HasColumnType("text")
                        .HasColumnName("cartao");

                    b.Property<double>("Consumacao")
                        .HasColumnType("double precision")
                        .HasColumnName("consumacao");

                    b.Property<string>("Praca")
                        .HasColumnType("text")
                        .HasColumnName("praca");

                    b.Property<bool>("Taxa")
                        .HasColumnType("boolean")
                        .HasColumnName("taxa");

                    b.Property<string>("Tipo")
                        .HasColumnType("text")
                        .HasColumnName("tipo");

                    b.Property<bool>("Vip")
                        .HasColumnType("boolean")
                        .HasColumnName("vip");

                    b.Property<string>("status")
                        .HasColumnType("text")
                        .HasColumnName("status");

                    b.HasKey("Codigo");

                    b.ToTable("mesas");
                });

            modelBuilder.Entity("SysIntegradorApp.ClassesAuxiliares.ClassesGarcomSysMenu.Produto", b =>
                {
                    b.Property<string>("Codigo")
                        .HasColumnType("text")
                        .HasColumnName("codigo");

                    b.Property<string>("Descricao")
                        .HasColumnType("text")
                        .HasColumnName("descricao");

                    b.Property<string>("Fracionado")
                        .HasColumnType("text")
                        .HasColumnName("fracionado");

                    b.Property<string>("Grupo")
                        .HasColumnType("text")
                        .HasColumnName("grupo");

                    b.Property<bool>("OcultaTablet")
                        .HasColumnType("boolean")
                        .HasColumnName("ocultatablet");

                    b.Property<double>("Preco1")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("pvenda1");

                    b.Property<double>("Preco2")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("pvenda2");

                    b.Property<double>("Preco3")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("pvenda3");

                    b.Property<string>("TamanhoUnico")
                        .HasColumnType("text")
                        .HasColumnName("tamanhounico");

                    b.HasKey("Codigo");

                    b.ToTable("cardapio");
                });

            modelBuilder.Entity("SysIntegradorApp.ClassesAuxiliares.ClassesGarcomSysMenu.Promocoes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Dia")
                        .HasColumnType("text")
                        .HasColumnName("dia");

                    b.Property<bool>("Mesa")
                        .HasColumnType("boolean")
                        .HasColumnName("mesa");

                    b.Property<string>("codigo")
                        .HasColumnType("text")
                        .HasColumnName("codigo");

                    b.Property<double>("pvenda1")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("pvenda1");

                    b.Property<double>("pvenda2")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("pvenda2");

                    b.Property<double>("pvenda3")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("pvenda3");

                    b.HasKey("Id");

                    b.ToTable("promocoes");
                });

            modelBuilder.Entity("SysIntegradorApp.ClassesAuxiliares.ClassesGarcomSysMenu.Setup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("CouvertDom")
                        .HasColumnType("boolean")
                        .HasColumnName("couvertdom");

                    b.Property<bool>("CouvertHoje")
                        .HasColumnType("boolean")
                        .HasColumnName("CouvertHoje");

                    b.Property<bool>("CouvertQuar")
                        .HasColumnType("boolean")
                        .HasColumnName("couvertquar");

                    b.Property<bool>("CouvertQuin")
                        .HasColumnType("boolean")
                        .HasColumnName("couvertquin");

                    b.Property<bool>("CouvertSab")
                        .HasColumnType("boolean")
                        .HasColumnName("couvertsab");

                    b.Property<bool>("CouvertSeg")
                        .HasColumnType("boolean")
                        .HasColumnName("couvertseg");

                    b.Property<bool>("CouvertSex")
                        .HasColumnType("boolean")
                        .HasColumnName("couvertsex");

                    b.Property<bool>("CouvertTer")
                        .HasColumnType("boolean")
                        .HasColumnName("couvertter");

                    b.Property<float>("CouvertValor")
                        .HasColumnType("real")
                        .HasColumnName("couvertvalor");

                    b.HasKey("Id");

                    b.ToTable("setup");
                });

            modelBuilder.Entity("SysIntegradorApp.ClassesAuxiliares.EmpresasEntregaTaxyMachine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CodEntregador")
                        .HasColumnType("text")
                        .HasColumnName("cod_entregador");

                    b.Property<bool>("Integra")
                        .HasColumnType("boolean")
                        .HasColumnName("integra");

                    b.Property<string>("MachineId")
                        .HasColumnType("text")
                        .HasColumnName("machine_id");

                    b.Property<string>("NomeEmpresa")
                        .HasColumnType("text")
                        .HasColumnName("nome_empresa");

                    b.Property<string>("Senha")
                        .HasColumnType("text")
                        .HasColumnName("senha");

                    b.Property<string>("TipoPagamento")
                        .HasColumnType("text")
                        .HasColumnName("tipo_pagamento");

                    b.Property<string>("Usuario")
                        .HasColumnType("text")
                        .HasColumnName("usuario");

                    b.HasKey("Id");

                    b.ToTable("empresastaxymachine");
                });

            modelBuilder.Entity("SysIntegradorApp.ClassesAuxiliares.Ifood.EmpresasIfood", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("DataExpiracao")
                        .HasColumnType("text")
                        .HasColumnName("dataExpiracao");

                    b.Property<bool>("IntegraEmpresa")
                        .HasColumnType("boolean")
                        .HasColumnName("integraempresa");

                    b.Property<string>("MerchantId")
                        .HasColumnType("text")
                        .HasColumnName("merchantid");

                    b.Property<string>("NomeIdentificador")
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.Property<bool>("Online")
                        .HasColumnType("boolean")
                        .HasColumnName("online");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("text")
                        .HasColumnName("refreshToken");

                    b.Property<string>("Token")
                        .HasColumnType("text")
                        .HasColumnName("token");

                    b.HasKey("Id");

                    b.ToTable("empresasIfoods");
                });

            modelBuilder.Entity("SysIntegradorApp.ClassesAuxiliares.ParametrosDoPedido", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<int>("Conta")
                        .HasColumnType("integer")
                        .HasColumnName("conta");

                    b.Property<string>("CriadoEm")
                        .HasColumnType("text")
                        .HasColumnName("criadoem");

                    b.Property<string>("CriadoPor")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("criadopor");

                    b.Property<int>("DisplayId")
                        .HasColumnType("integer")
                        .HasColumnName("displayid");

                    b.Property<string>("Json")
                        .HasColumnType("text")
                        .HasColumnName("json");

                    b.Property<string>("JsonPolling")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("jsonpolling");

                    b.Property<int>("PesquisaDisplayId")
                        .HasColumnType("integer")
                        .HasColumnName("pesquisadisplayid");

                    b.Property<string>("PesquisaNome")
                        .HasColumnType("text")
                        .HasColumnName("pesquisanome");

                    b.Property<string>("Situacao")
                        .HasColumnType("text")
                        .HasColumnName("situacao");

                    b.HasKey("Id");

                    b.ToTable("parametrosdopedido");
                });

            modelBuilder.Entity("SysIntegradorApp.ClassesAuxiliares.ParametrosDoSistema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("AceitaPedidoAut")
                        .HasColumnType("boolean")
                        .HasColumnName("aceitapedidoaut");

                    b.Property<bool>("AgruparComandas")
                        .HasColumnType("boolean")
                        .HasColumnName("agruparcomandas");

                    b.Property<string>("ApiKeyTaxyMachine")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("apikeytaxymachine");

                    b.Property<string>("CaminhoServidor")
                        .HasColumnType("text")
                        .HasColumnName("caminhoservidor");

                    b.Property<string>("CaminhodoBanco")
                        .HasColumnType("text")
                        .HasColumnName("caminhodobanco");

                    b.Property<string>("CardapioUsando")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("cardapiousando");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("cidade");

                    b.Property<string>("ClientId")
                        .HasColumnType("text")
                        .HasColumnName("clientid");

                    b.Property<string>("ClientSecret")
                        .HasColumnType("text")
                        .HasColumnName("clientsecret");

                    b.Property<string>("ClientSecretAiqfome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("client_secret_aiqfome");

                    b.Property<string>("CodFilialCCM")
                        .HasColumnType("text")
                        .HasColumnName("codfilialccm");

                    b.Property<bool>("ComandaReduzida")
                        .HasColumnType("boolean")
                        .HasColumnName("comandareduzida");

                    b.Property<string>("DelMatchId")
                        .HasColumnType("text")
                        .HasColumnName("delmatchid");

                    b.Property<bool>("DestacarObs")
                        .HasColumnType("boolean")
                        .HasColumnName("destacarobs");

                    b.Property<string>("DtUltimaVerif")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("dtultimaverif");

                    b.Property<string>("EmpresadeEntrega")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("empresadeentrega");

                    b.Property<string>("Endereco")
                        .HasColumnType("text")
                        .HasColumnName("endereco");

                    b.Property<bool>("EnviaPedidoAut")
                        .HasColumnType("boolean")
                        .HasColumnName("enviapedidoaut");

                    b.Property<bool>("IfoodMultiEmpresa")
                        .HasColumnType("boolean")
                        .HasColumnName("ifoodmultiempresa");

                    b.Property<bool>("ImpCompacta")
                        .HasColumnType("boolean")
                        .HasColumnName("impcompacta");

                    b.Property<bool>("ImpressaoAut")
                        .HasColumnType("boolean")
                        .HasColumnName("impressaoaut");

                    b.Property<string>("Impressora1")
                        .HasColumnType("text")
                        .HasColumnName("impressora1");

                    b.Property<string>("Impressora2")
                        .HasColumnType("text")
                        .HasColumnName("impressora2");

                    b.Property<string>("Impressora3")
                        .HasColumnType("text")
                        .HasColumnName("impressora3");

                    b.Property<string>("Impressora4")
                        .HasColumnType("text")
                        .HasColumnName("impressora4");

                    b.Property<string>("Impressora5")
                        .HasColumnType("text")
                        .HasColumnName("impressora5");

                    b.Property<string>("ImpressoraAux")
                        .HasColumnType("text")
                        .HasColumnName("impressoraaux");

                    b.Property<bool>("ImprimirComandaNoCaixa")
                        .HasColumnType("boolean")
                        .HasColumnName("imprimircomandacaixa");

                    b.Property<bool>("IntegraAiQFome")
                        .HasColumnType("boolean")
                        .HasColumnName("integra_aiqfome");

                    b.Property<bool>("IntegraAnotaAi")
                        .HasColumnType("boolean")
                        .HasColumnName("integraanotaai");

                    b.Property<bool>("IntegraCCM")
                        .HasColumnType("boolean")
                        .HasColumnName("integraccm");

                    b.Property<bool>("IntegraDelMatch")
                        .HasColumnType("boolean")
                        .HasColumnName("integradelmatch");

                    b.Property<bool>("IntegraDelmatchEntregas")
                        .HasColumnType("boolean")
                        .HasColumnName("integradelmatchentregas");

                    b.Property<bool>("IntegraGarcom")
                        .HasColumnType("boolean")
                        .HasColumnName("integragarcom");

                    b.Property<bool>("IntegraIfood")
                        .HasColumnType("boolean")
                        .HasColumnName("integraifood");

                    b.Property<bool>("IntegraJumaEntregas")
                        .HasColumnType("boolean")
                        .HasColumnName("integra_juma_entregas");

                    b.Property<bool>("IntegraOnOPedido")
                        .HasColumnType("boolean")
                        .HasColumnName("integraonpedido");

                    b.Property<bool>("IntegraOttoEntregas")
                        .HasColumnType("boolean")
                        .HasColumnName("integraottoentregas");

                    b.Property<bool>("IntegracaoSysMenu")
                        .HasColumnType("boolean")
                        .HasColumnName("integracaosysmenu");

                    b.Property<bool>("IntegravariasEmpresasTaxyMachine")
                        .HasColumnType("boolean")
                        .HasColumnName("integra_varias_empresas_taxymachine");

                    b.Property<string>("MerchantId")
                        .HasColumnType("text")
                        .HasColumnName("merchantid");

                    b.Property<string>("NomeFantasia")
                        .HasColumnType("text")
                        .HasColumnName("nomefantasia");

                    b.Property<int>("NumDeViasDeComanda")
                        .HasColumnType("integer")
                        .HasColumnName("numviascomanda");

                    b.Property<string>("PasswordTaxyMachine")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("passwordtaxymachine");

                    b.Property<bool>("RemoveComplementos")
                        .HasColumnType("boolean")
                        .HasColumnName("removecomplmentos");

                    b.Property<bool>("RetornoAut")
                        .HasColumnType("boolean")
                        .HasColumnName("retornoaut");

                    b.Property<string>("SenhaDelMatch")
                        .HasColumnType("text")
                        .HasColumnName("senhadelmatch");

                    b.Property<string>("SenhaOnPedido")
                        .HasColumnType("text")
                        .HasColumnName("senhaonpedido");

                    b.Property<string>("Telefone")
                        .HasColumnType("text")
                        .HasColumnName("telefone");

                    b.Property<int>("TempoConclonPedido")
                        .HasColumnType("integer")
                        .HasColumnName("tempoconclonpedido");

                    b.Property<int>("TempoEntrega")
                        .HasColumnType("integer")
                        .HasColumnName("tempoentrega");

                    b.Property<int>("TempoPollingGarcom")
                        .HasColumnType("integer")
                        .HasColumnName("tempopollinggarcom");

                    b.Property<int>("TempoRetirada")
                        .HasColumnType("integer")
                        .HasColumnName("temporetirada");

                    b.Property<int>("TipoComanda")
                        .HasColumnType("integer")
                        .HasColumnName("tipocomanda");

                    b.Property<string>("TipoPagamentoTaxyMachine")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("tipodepagamentotaxymachine");

                    b.Property<string>("TokenAnotaAi")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("tokenanotaai");

                    b.Property<string>("TokenCCM")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("tokenccm");

                    b.Property<string>("TokenOnPedido")
                        .HasColumnType("text")
                        .HasColumnName("tokenonpedido");

                    b.Property<bool>("UsarNomeNaComanda")
                        .HasColumnType("boolean")
                        .HasColumnName("usarnomenacomanda");

                    b.Property<string>("UserDelMatch")
                        .HasColumnType("text")
                        .HasColumnName("userdelmatch");

                    b.Property<string>("UserNameTaxyMachine")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("usernametaxymachine");

                    b.Property<string>("UserOnPedido")
                        .HasColumnType("text")
                        .HasColumnName("useronpedido");

                    b.HasKey("Id");

                    b.ToTable("parametrosdosistema");
                });

            modelBuilder.Entity("SysIntegradorApp.ClassesAuxiliares.Token", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("TokenDelMatch")
                        .HasColumnType("text")
                        .HasColumnName("tokendelmatch");

                    b.Property<string>("TokenOnPedido")
                        .HasColumnType("text")
                        .HasColumnName("tokenonpedido");

                    b.Property<string>("VenceEm")
                        .HasColumnType("text")
                        .HasColumnName("venceem");

                    b.Property<string>("VenceEmDelMatch")
                        .HasColumnType("text")
                        .HasColumnName("venceemdelmatch");

                    b.Property<string>("VenceEmOnPedido")
                        .HasColumnType("text")
                        .HasColumnName("venceemonpedido");

                    b.Property<string>("accessToken")
                        .HasColumnType("text")
                        .HasColumnName("accesstoken");

                    b.Property<int>("expiresIn")
                        .HasColumnType("integer")
                        .HasColumnName("expiresin");

                    b.Property<string>("refreshToken")
                        .HasColumnType("text")
                        .HasColumnName("refreshtoken");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("parametrosdeautenticacao");
                });
#pragma warning restore 612, 618
        }
    }
}
